/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

/* Sara's keymap */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>


// raise layer should only be available if both modifiers (lower and raise) are pressed - so define mo 2 in lower layer
// don't use &trans (transparent), be explicit for all keypresses
// got a little lazy with the raise layer and kept the rotary encoder functions but not keypresses

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
// --note: right half lowest row is for work; ` (backticks/tilde), - (dash/underscore), and \ is for easy access to pipe (|)
// ---------------------------------------------------------------------------------------------------------------------
// |  ESC  |  1  |   2   |   3    |  4   |  5    |                      |   6    |   7    |   8    |   9   |   0   | BKSPC |
// |  TAB  |  Q  |   W   |   E    |  R   |  T    |                      |   Y    |   U    |   I    |   O   |   P   |  DEL  |
// | LCTRL |  A  |   S   |   D    |  F   |  G    |                      |   H    |   J    |   K    |   L   |   ;   |   '   |
// | SHIFT |  Z  |   X   |   C    |  V   |  B    |   HOME  |  |   =     |   N    |   M    |   ,    |   .   |   /   | PSCRN |
//               |  APP  |  GUI   | ALT  | LOWER |   SPACE |  |  SPACE  |  RET   |   `    |   -    |   \   |                  --see above note to understand why programmer symbols

            bindings = <
&kp ESC   &kp N1 &kp N2    &kp N3   &kp N4  &kp N5                          &kp N6    &kp N7    &kp N8    &kp N9   &kp N0   &kp BSPC
&kp TAB   &kp Q  &kp W     &kp E    &kp R   &kp T                           &kp Y     &kp U     &kp I     &kp O    &kp P    &kp DEL
&kp LCTRL &kp A  &kp S     &kp D    &kp F   &kp G                           &kp H     &kp J     &kp K     &kp L    &kp SEMI &kp SQT
&kp LSHFT &kp Z  &kp X     &kp C    &kp V   &kp B     &kp K_APP  &kp EQUAL  &kp N     &kp M     &kp COMMA &kp DOT  &kp FSLH &kp PSCRN
                 &kp LGUI  &kp LALT &mo 1   &kp SPACE &kp HOME   &kp RET    &kp SPACE &kp GRAVE &kp MINUS &kp BSLH
            >;

            sensor-bindings = <&inc_dec_kp LBKT RBKT &inc_dec_kp LBKT RBKT>;
        };

        lower_layer {
        //blank spaces mean NONE. Do not use &trans(parent) because we need feedback we're in the right layer
// -----------------------------------------------------------------------------------------------------------------------------
// | F12   | F1 |    F2 |        F3  |       F4 |    F5  |                      |  F6  |  F7   |  F8   |  F9  |  F10  |   F11  |
// | TAB   |    |   kp7 |       kp8  |      kp9 |   INS  |                      |      |       |       |      |       |        |
// | CAPS  |    |   kp4 |       kp5  |      kp6 |   DEL  |                      | <-   |  down | up    | ->   |       |        |
// | SHIFT |    |   kp1 |       kp2  |      kp3 |   END  |    HOME   |  | MUTE  |      |       |       |      |       |        |
//              |   kp0 |      LGUI  |     LALT |  LOWER |    SPACE  |  | SPACE | RAISE| RCTRL |       |      |

            bindings = <
&kp F12   &kp F1 &kp F2      &kp F3     &kp F4     &kp F5                         &kp F6    &kp F7    &kp F8    &kp F9    &kp F10 &kp F11
&kp TAB   &none  &kp KP_N7   &kp KP_N8  &kp KP_N9  &kp INS                        &none     &none     &none     &none     &none   &none
&kp CAPS  &kp C_VOL_UP  &kp KP_N4   &kp KP_N5  &kp KP_N6  &kp DEL                        &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT &none   &none
&kp LSHFT &kp C_VOL_DN  &kp KP_N1   &kp KP_N2  &kp KP_N3  &kp END   &kp HOME  &kp C_MUTE &none     &none     &none     &none     &none   &none
                 &kp KP_N0   &kp LALT   &mo 1      &kp SPACE &kp END   &kp RET    &kp SPACE &mo 2     &kp EQUAL &none
            >;
            sensor-bindings = <&inc_dec_kp PG_UP PG_DN &inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        raise_layer {
// ------------------------------------------------------------------------------------------------------------------------------------------
// |  BT0     | BT1       | BT2       |  BT3       |  BT4       |      |                     |      |       |     |      |BT_CLR   | BT_CLR |
// | btload   |           |           |            |            |      |                     |      |       |     |      |         |        |
// | reset    |           |           |            |            |      |                     |      |       |     |      |         |        |
// |          |           |           |            |            |      |        |  |         |      |       |     |      |         |        |
//                        |           |            |            |LOWER |        |  |         |RAISE |       |     |      |
            bindings = <
&bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4  &none                      &none    &none &none &none   &bt BT_CLR &bt BT_CLR
&reset       &none        &none        &none        &none         &none                      &none    &none &none &none   &none      &none
&bootloader  &none        &none        &none        &none         &none                      &none    &none &none &none   &none      &none
&none        &none        &none        &none        &none         &none  &none        &none  &none    &none &none &none   &none      &none
                          &none        &none        &none         &mo 1  &none        &none  &mo 2    &none &none &none
            >;
            sensor-bindings = <&inc_dec_kp PG_UP PG_DN &inc_dec_kp C_VOL_UP C_VOL_DN>;
        };
    };
};

